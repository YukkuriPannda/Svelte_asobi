{
  "cacheItemsMap": {
    "posts/JBLT450bt01.md": {
      "document": {
        "draft": false,
        "title": "ワイヤレスヘッドフォンJBL T450BTを改造してみよう#その１",
        "thumnail_path": "https://img.rhoknov.net/thumnail.png\r",
        "date": "2025-02-04T00:00:00.000Z",
        "body": {
          "raw": "\r\n## ワイヤレスヘッドフォンを入手した\r\n\r\nワイヤレスヘッドフォンが自宅に落ちていた。\r\n\r\nバッテリーがへたっていたためバッテリー交換をしようと思う。\r\n\r\nでも、それだけじゃつまらんじゃん？ いろいろ改造したいよね\r\n\r\n## 今回改造していくヘッドフォンについて\r\n\r\n![JBLT450BT](https://img.rhoknov.net\\450BT_black_angle_01-1606x1606px.jpg)\r\n\r\n**JBL T450BT**\r\nJBLから2017年にリリースされた5000円中盤の**ワイヤレスヘッドフォン**で低音に強いのが特徴だ。\r\n\r\n同社から発売されたT450のBluetoothバージョンとなっている。\r\n\r\nドライバ径は32mmで重量は320gと軽量だ。\r\n\r\n公称では11時間充電が持つが、長年の酷使により１時間ともたない高級耳当てと化した。\r\n\r\n## どのような改造をしたいか\r\n\r\nどのような改造をしていこう\r\n\r\n1. バッテリーの交換\r\n2. 有線モードの追加\r\n3. オレンジのアクセントカラーを入れる\r\n4. リケーブルへの対応\r\n5. ヘッドバンドの追加\r\n\r\n1については当然必要だ。これがないと動かない。\r\n\r\n2以降は完全に趣味である。最近**MOON DROP dawn\r\npro**というポータブルオーディオDACを購入した。\r\n\r\nこいつを使い倒したいのである。\r\n\r\nmoon drop dawn\r\nproは4.4mmバランス接続に対応しているため、バランス接続してみたら面白そうだ\r\n\r\n4は単純にかっこいいからである。\r\n\r\n最近黒とオレンジの色の組み合わせにはまっている。ただそれだけだ。\r\n\r\n5はヘッドバンドがあるだけで高見えするから。男の子って単純ね。\r\n\r\n## 分解してみよう\r\n\r\nとりあえず参考にこの動画を見る\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/j61LaWcByOM?si=ijVutsoRyQFQPIFw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\r\n\r\nなになにイヤーパッドを外すとネジが3つ出てきて...?そこをあけると...?\r\n\r\n![1](https://img.rhoknov.net\\AP1GczPQciAPTBr3llkXB1FfrY6dmsA4.png)\r\n\r\nおおバッテリーと基盤が出てきた\r\n\r\nふた側はドライバーユニットとなっており、二つの電極のみが露出している。\r\n\r\nその電極と基盤側の電極を触れ合わせると回路が導通するようだ。\r\n\r\n~~いいんか...こんなんで...~~\r\n\r\n![2](https://img.rhoknov.net\\AP1GczN8Vk2DZXuQ2-V1S5XWFTMB0To6.png)\r\n\r\nバッテリーはこんな感じ\r\n\r\n安全回路つきの3.7Vリポバッテリーだ。\r\n\r\n## 音、出してみよう\r\n\r\nいったんドライバユニットも出てきたところだし音声波形を流して音を出してみたい。\r\n\r\nということで用意したのはこの二つ\r\n![3](https://img.rhoknov.net\\AP1GczMeXMCEd9omSydB1eVsNcZYeGQx.png)\r\n**我が家の中でいちばん壊れてもどうにかなる音声波形を出力してくれる装置～～～～**\r\n![4](https://img.rhoknov.net\\AP1GczNgfkbssdZNZn8cH7VIzUt_mzmu.png)\r\n**そこらへんに落ちてた3.5mmの延長ケーブルをぶった切って芯線をひねり出して無理やりワニ口にはんだでくっつけたやつ～～～～～**\r\n\r\n~~なんか画像では片方ちぎれてるけど～～～～~~\r\n\r\n**こいつを～～～～～～～？？？？？**\r\n\r\n![5](https://img.rhoknov.net\\JBL450bt\\plboq-pdiik.gif)\r\n\r\n**刺す～～～～～～～～！！！！！**\r\n\r\n![6](https://img.rhoknov.net\\JBL450bt\\IMG_3205.gif)\r\n\r\n**鳴らす～～～～～～～！！！！！**\r\n\r\n**！！！！！**\r\n\r\n**！！！！！**\r\n\r\n**鳴る～～～～～～～！！！！！**\r\n\r\nということで、なった。 ここに電流を流すことで音が流れることがわかった。\r\n\r\n## もう一段階分解しつつ寸法を図る\r\n\r\n![7](https://img.rhoknov.net\\AP1GczMnjcqh6DyxjNZNiwV2cdjXJxyW.png)\r\n\r\n/ ﾊﾟｶ \\\r\n\r\n超シンプル。\r\n\r\nどうやら緑の基盤の電極に電流を流せばいいようだ。\r\n\r\n今回は有線モードとBluetoothモード両方選択できるようにしたいので新規に基盤を作る必要がある。\r\n\r\nということで基盤のサイズの制限を調べるために完成予想図を下記ながら寸法を調べていこう。\r\n\r\n![8](https://img.rhoknov.net\\AP1GczOThvdHdA1B1WZyXk0Y6KTXlWKX.png)\r\n\r\nこんなかんじの構造で作ればいけそう。\r\n\r\nオレンジが3.5mmジャック、緑が基盤あとはまあノリだ。\r\n\r\nネジは一つぶち抜く必要がありそう。\r\n\r\n## To be contenue...\r\n\r\n今日はつかれたのでここまで。\r\n\r\n次回は回路図を書いて部品選定を行い、組んでみようともっている。\r\n\r\n割と長期シリーズになる気がする\r\n",
          "html": "<h2>ワイヤレスヘッドフォンを入手した</h2>\n<p>ワイヤレスヘッドフォンが自宅に落ちていた。</p>\n<p>バッテリーがへたっていたためバッテリー交換をしようと思う。</p>\n<p>でも、それだけじゃつまらんじゃん？ いろいろ改造したいよね</p>\n<h2>今回改造していくヘッドフォンについて</h2>\n<p><img src=\"https://img.rhoknov.net%5C450BT_black_angle_01-1606x1606px.jpg\" alt=\"JBLT450BT\"></p>\n<p><strong>JBL T450BT</strong>\r\nJBLから2017年にリリースされた5000円中盤の<strong>ワイヤレスヘッドフォン</strong>で低音に強いのが特徴だ。</p>\n<p>同社から発売されたT450のBluetoothバージョンとなっている。</p>\n<p>ドライバ径は32mmで重量は320gと軽量だ。</p>\n<p>公称では11時間充電が持つが、長年の酷使により１時間ともたない高級耳当てと化した。</p>\n<h2>どのような改造をしたいか</h2>\n<p>どのような改造をしていこう</p>\n<ol>\n<li>バッテリーの交換</li>\n<li>有線モードの追加</li>\n<li>オレンジのアクセントカラーを入れる</li>\n<li>リケーブルへの対応</li>\n<li>ヘッドバンドの追加</li>\n</ol>\n<p>1については当然必要だ。これがないと動かない。</p>\n<p>2以降は完全に趣味である。最近<strong>MOON DROP dawn\r\npro</strong>というポータブルオーディオDACを購入した。</p>\n<p>こいつを使い倒したいのである。</p>\n<p>moon drop dawn\r\nproは4.4mmバランス接続に対応しているため、バランス接続してみたら面白そうだ</p>\n<p>4は単純にかっこいいからである。</p>\n<p>最近黒とオレンジの色の組み合わせにはまっている。ただそれだけだ。</p>\n<p>5はヘッドバンドがあるだけで高見えするから。男の子って単純ね。</p>\n<h2>分解してみよう</h2>\n<p>とりあえず参考にこの動画を見る</p>\n<p>なになにイヤーパッドを外すとネジが3つ出てきて...?そこをあけると...?</p>\n<p><img src=\"https://img.rhoknov.net%5CAP1GczPQciAPTBr3llkXB1FfrY6dmsA4.png\" alt=\"1\"></p>\n<p>おおバッテリーと基盤が出てきた</p>\n<p>ふた側はドライバーユニットとなっており、二つの電極のみが露出している。</p>\n<p>その電極と基盤側の電極を触れ合わせると回路が導通するようだ。</p>\n<p>~~いいんか...こんなんで...~~</p>\n<p><img src=\"https://img.rhoknov.net%5CAP1GczN8Vk2DZXuQ2-V1S5XWFTMB0To6.png\" alt=\"2\"></p>\n<p>バッテリーはこんな感じ</p>\n<p>安全回路つきの3.7Vリポバッテリーだ。</p>\n<h2>音、出してみよう</h2>\n<p>いったんドライバユニットも出てきたところだし音声波形を流して音を出してみたい。</p>\n<p>ということで用意したのはこの二つ\r\n<img src=\"https://img.rhoknov.net%5CAP1GczMeXMCEd9omSydB1eVsNcZYeGQx.png\" alt=\"3\">\r\n<strong>我が家の中でいちばん壊れてもどうにかなる音声波形を出力してくれる装置～～～～</strong>\r\n<img src=\"https://img.rhoknov.net%5CAP1GczNgfkbssdZNZn8cH7VIzUt_mzmu.png\" alt=\"4\">\r\n<strong>そこらへんに落ちてた3.5mmの延長ケーブルをぶった切って芯線をひねり出して無理やりワニ口にはんだでくっつけたやつ～～～～～</strong></p>\n<p>~~なんか画像では片方ちぎれてるけど～～～～~~</p>\n<p><strong>こいつを～～～～～～～？？？？？</strong></p>\n<p><img src=\"https://img.rhoknov.net%5CJBL450bt%5Cplboq-pdiik.gif\" alt=\"5\"></p>\n<p><strong>刺す～～～～～～～～！！！！！</strong></p>\n<p><img src=\"https://img.rhoknov.net%5CJBL450bt%5CIMG_3205.gif\" alt=\"6\"></p>\n<p><strong>鳴らす～～～～～～～！！！！！</strong></p>\n<p><strong>！！！！！</strong></p>\n<p><strong>！！！！！</strong></p>\n<p><strong>鳴る～～～～～～～！！！！！</strong></p>\n<p>ということで、なった。 ここに電流を流すことで音が流れることがわかった。</p>\n<h2>もう一段階分解しつつ寸法を図る</h2>\n<p><img src=\"https://img.rhoknov.net%5CAP1GczMnjcqh6DyxjNZNiwV2cdjXJxyW.png\" alt=\"7\"></p>\n<p>/ ﾊﾟｶ \\</p>\n<p>超シンプル。</p>\n<p>どうやら緑の基盤の電極に電流を流せばいいようだ。</p>\n<p>今回は有線モードとBluetoothモード両方選択できるようにしたいので新規に基盤を作る必要がある。</p>\n<p>ということで基盤のサイズの制限を調べるために完成予想図を下記ながら寸法を調べていこう。</p>\n<p><img src=\"https://img.rhoknov.net%5CAP1GczOThvdHdA1B1WZyXk0Y6KTXlWKX.png\" alt=\"8\"></p>\n<p>こんなかんじの構造で作ればいけそう。</p>\n<p>オレンジが3.5mmジャック、緑が基盤あとはまあノリだ。</p>\n<p>ネジは一つぶち抜く必要がありそう。</p>\n<h2>To be contenue...</h2>\n<p>今日はつかれたのでここまで。</p>\n<p>次回は回路図を書いて部品選定を行い、組んでみようともっている。</p>\n<p>割と長期シリーズになる気がする</p>"
        },
        "_id": "posts/JBLT450bt01.md",
        "_raw": {
          "sourceFilePath": "posts/JBLT450bt01.md",
          "sourceFileName": "JBLT450bt01.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/JBLT450bt01"
        },
        "type": "Post",
        "slug": "JBLT450bt01",
        "slugFull": "/posts/JBLT450bt01",
        "fileName": "JBLT450bt01",
        "suffix": ".md"
      },
      "documentHash": "1738718325988",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "posts/TestBlog1.md": {
      "document": {
        "draft": false,
        "title": "初投稿のブログテストだよ",
        "date": "2022-03-10T15:00:00.000Z",
        "body": {
          "raw": "\r\n# 📄初投稿です。よろしく\r\n\r\nやっとブログを作れた。\r\n思い立ってはや2年、色々なフレームワークなどをゲーム制作の間を縫って試しつつ、やっと完成まで漕ぎ着けた\r\n\r\n## 私について\r\n\r\nゲームプログラマーです。 写真も撮ります。ウェブも書きます。 デザインもします。\r\nhttps://twitter.com/Rhoknov\r\n\r\n## 🛠️ブログの技術構成について\r\n\r\n基本的には以下のフレームワーク、パッケージを使用している。\r\n\r\n- svelte\r\n- sveltekit\r\n- cloud flare\r\n- contentlayer\r\n- github-markdown-css\r\n- svelte-markdown 今回はデプロイにcloud\r\n  flareを使うため、静的なサイトにしなければいけない。\r\n  そのため記事の内容を返すapiを作るなどの動的な機能を使うことはできない。\r\n  そこで今回は記事の内容をmarkdownのファイルを書いて、そこからcontentlayerで記事一覧のファイルを生成するという手段を取る。\r\n\r\n```ts\r\nimport posts__testBlog1Md from \"./posts__TestBlog1.md.json\" assert {\r\n  type: \"json\",\r\n};\r\nimport posts__testBlog2Md from \"./posts__TestBlog2.md.json\" assert {\r\n  type: \"json\",\r\n};\r\n\r\nexport const allPosts = [posts__testBlog1Md, posts__testBlog2Md];\r\n```\r\n\r\n生成した記事一覧ファイルを、+page.svelteでimportし、svelte-markdownでmarkdown形式のテキストをsvelteのcompornentに変換し、その上からgithub-markdown-cssを適用、表示している。\r\n記事を投稿するときは記事のmarkdownファイルをgithubリポジトリにコミットするだけだ。\r\ncloudflare側がコミットを検知したらリポジトリから`npm run buid`を自動的に実行し、サイトが公開される。\r\n\r\n## ContentLayerについて\r\n\r\nContentLayerとは、markdown形式のファイルをjson形式のファイルにまとめ、staticなサイトでも、markdown形式で書いた記事を扱うことができるツールだ。\\\r\nNext.jsにおいては公式でサポートされているが、Svelteにおいては公式にサポートするかの投票が行われた以外の音沙汰はない。\\\r\nそのため、[こちら](https://github.com/git-no/sveltekit-contentlayer-example/tree/main)のリポジトリを参考に、`npm run buid`時に`contentlayer build`が行われるように設定した。\\\r\n上質なリポジトリでとても助かった。\r\n",
          "html": "<h1>📄初投稿です。よろしく</h1>\n<p>やっとブログを作れた。\r\n思い立ってはや2年、色々なフレームワークなどをゲーム制作の間を縫って試しつつ、やっと完成まで漕ぎ着けた</p>\n<h2>私について</h2>\n<p>ゲームプログラマーです。 写真も撮ります。ウェブも書きます。 デザインもします。\r\nhttps://twitter.com/Rhoknov</p>\n<h2>🛠️ブログの技術構成について</h2>\n<p>基本的には以下のフレームワーク、パッケージを使用している。</p>\n<ul>\n<li>svelte</li>\n<li>sveltekit</li>\n<li>cloud flare</li>\n<li>contentlayer</li>\n<li>github-markdown-css</li>\n<li>svelte-markdown 今回はデプロイにcloud\r\nflareを使うため、静的なサイトにしなければいけない。\r\nそのため記事の内容を返すapiを作るなどの動的な機能を使うことはできない。\r\nそこで今回は記事の内容をmarkdownのファイルを書いて、そこからcontentlayerで記事一覧のファイルを生成するという手段を取る。</li>\n</ul>\n<pre><code class=\"language-ts\">import posts__testBlog1Md from \"./posts__TestBlog1.md.json\" assert {\r\n  type: \"json\",\r\n};\r\nimport posts__testBlog2Md from \"./posts__TestBlog2.md.json\" assert {\r\n  type: \"json\",\r\n};\r\n\r\nexport const allPosts = [posts__testBlog1Md, posts__testBlog2Md];\n</code></pre>\n<p>生成した記事一覧ファイルを、+page.svelteでimportし、svelte-markdownでmarkdown形式のテキストをsvelteのcompornentに変換し、その上からgithub-markdown-cssを適用、表示している。\r\n記事を投稿するときは記事のmarkdownファイルをgithubリポジトリにコミットするだけだ。\r\ncloudflare側がコミットを検知したらリポジトリから<code>npm run buid</code>を自動的に実行し、サイトが公開される。</p>\n<h2>ContentLayerについて</h2>\n<p>ContentLayerとは、markdown形式のファイルをjson形式のファイルにまとめ、staticなサイトでも、markdown形式で書いた記事を扱うことができるツールだ。<br>\nNext.jsにおいては公式でサポートされているが、Svelteにおいては公式にサポートするかの投票が行われた以外の音沙汰はない。<br>\nそのため、<a href=\"https://github.com/git-no/sveltekit-contentlayer-example/tree/main\">こちら</a>のリポジトリを参考に、<code>npm run buid</code>時に<code>contentlayer build</code>が行われるように設定した。<br>\n上質なリポジトリでとても助かった。</p>"
        },
        "_id": "posts/TestBlog1.md",
        "_raw": {
          "sourceFilePath": "posts/TestBlog1.md",
          "sourceFileName": "TestBlog1.md",
          "sourceFileDir": "posts",
          "contentType": "markdown",
          "flattenedPath": "posts/TestBlog1"
        },
        "type": "Post",
        "slug": "TestBlog1",
        "slugFull": "/posts/TestBlog1",
        "fileName": "TestBlog1",
        "suffix": ".md"
      },
      "documentHash": "1738718373877",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
