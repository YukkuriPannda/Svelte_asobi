{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, defineNestedType, makeSource } from 'contentlayer/source-files';\r\nimport path from 'path';\r\n\r\n/** @type {import('contentlayer/source-files').ComputedFields} */\r\nconst computedFields = {\r\n\tslug: {\r\n\t\ttype: 'string',\r\n\t\tresolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/')\r\n\t},\r\n\tslugFull: {\r\n\t\ttype: 'string',\r\n\t\tresolve: (doc) => `/${doc._raw.flattenedPath}`\r\n\t},\r\n\tfileName: {\r\n\t\ttype: 'string',\r\n\t\tresolve: (doc) => path.parse(doc._raw.sourceFilePath.split('/').slice(-1).join('/')).name\r\n\t},\r\n\tsuffix: {\r\n\t\ttype: 'string',\r\n\t\tresolve: (doc) => path.parse(doc._raw.sourceFilePath.split('/').slice(-1).join('/')).ext\r\n\t}\r\n};\r\n\r\nconst Author = defineNestedType(() => ({\r\n\tname: 'Author',\r\n\tfields: {\r\n\t\tname: { type: 'string', required: true },\r\n\t\thandle: { type: 'string', required: true },\r\n\t\tavatar: { type: 'string', required: true }\r\n\t}\r\n}));\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n\tname: 'Post',\r\n\tfilePathPattern: `posts/**/*.md`,\r\n\t// contentType: 'mdx',\r\n\tfields: {\r\n\t\tdraft: {\r\n\t\t\ttype: 'boolean',\r\n\t\t\tdescription: 'Disable in production mode',\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttype: 'string',\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tdescription: {\r\n\t\t\ttype: 'string'\r\n\t\t},\r\n\t\tthumnail_path: {\r\n\t\t\ttype: 'string'\r\n\t\t},\r\n\t\tdate: {\r\n\t\t\ttype: 'date',\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tauthors: {\r\n\t\t\ttype: 'list',\r\n\t\t\tof: Author,\r\n\t\t\trequired: false\r\n\t\t}\r\n\t},\r\n\tcomputedFields\r\n}));\r\n\r\nexport default makeSource({\r\n\tcontentDirPath: './content',\r\n\tdocumentTypes: [Post],\r\n\tdisableImportAliasWarning: true\r\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB,kBAAkB;AACjE,OAAO,UAAU;AAGjB,IAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACtE;AAAA,EACA,UAAU;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC7C;AAAA,EACA,UAAU;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,KAAK,MAAM,IAAI,KAAK,eAAe,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE;AAAA,EACtF;AAAA,EACA,QAAQ;AAAA,IACP,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,KAAK,MAAM,IAAI,KAAK,eAAe,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE;AAAA,EACtF;AACD;AAEA,IAAM,SAAS,iBAAiB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,QAAQ;AAAA,IACP,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACD,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EAEjB,QAAQ;AAAA,IACP,OAAO;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,SAAS;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AAAA,IACA,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,IACA,eAAe;AAAA,MACd,MAAM;AAAA,IACP;AAAA,IACA,MAAM;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AAAA,IACA,SAAS;AAAA,MACR,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,UAAU;AAAA,IACX;AAAA,EACD;AAAA,EACA;AACD,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACzB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,2BAA2B;AAC5B,CAAC;",
  "names": []
}
